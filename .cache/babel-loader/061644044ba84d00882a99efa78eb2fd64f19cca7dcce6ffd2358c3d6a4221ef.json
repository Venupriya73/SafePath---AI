{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venupriya\\\\safepath\\\\frontend-react\\\\src\\\\components\\\\RoutePlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport { useSpeechRecognition, SpeechRecognition } from \"react-speech-recognition\";\nimport \"./RoutePlanning.css\";\n\n// Fix Leaflet default icon URLs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\n// Load hazards.json (ensure it exists in /public/)\nasync function loadHazards() {\n  const response = await fetch(\"/hazards.json\");\n  if (!response.ok) throw new Error(\"Failed to load hazards\");\n  return await response.json();\n}\n\n// Calculate distance between two GPS points\nfunction getDistanceMeters(lat1, lon1, lat2, lon2) {\n  const R = 6371000; // meters\n  const dLat = (lat2 - lat1) * Math.PI / 180;\n  const dLon = (lon2 - lon1) * Math.PI / 180;\n  const a = Math.sin(dLat / 2) ** 2 + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) ** 2;\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\n\n// Find hazards near route\nfunction checkHazardsNearRoute(routeCoords, hazards) {\n  const result = [];\n  for (const hazard of hazards) {\n    for (const [lat, lon] of routeCoords) {\n      if (getDistanceMeters(lat, lon, hazard.lat, hazard.lon) <= hazard.radius_meters) {\n        result.push(hazard);\n        break; // stop checking this hazard after first match\n      }\n    }\n  }\n  return result;\n}\n\n// Geocode place name to coords\nasync function getCoordinates(place) {\n  const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(place)}&limit=1`);\n  const data = await response.json();\n  if (data && data.length > 0) {\n    return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\n  }\n  throw new Error(\"Location not found: \" + place);\n}\n\n// Use OSRM API to fetch route info\nasync function getRoute(startCoords, endCoords) {\n  const response = await fetch(`https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson&steps=true`);\n  const data = await response.json();\n  if (data.routes && data.routes.length > 0) {\n    const route = data.routes[0];\n    const steps = route.legs.flatMap(leg => leg.steps.map(step => step.maneuver.instruction));\n    return {\n      coordinates: route.geometry.coordinates.map(([lng, lat]) => [lat, lng]),\n      distance: (route.distance / 1000).toFixed(2),\n      duration: (route.duration / 60).toFixed(0),\n      steps\n    };\n  }\n  throw new Error(\"Route data unavailable\");\n}\n\n// Main component\nexport default function RoutePlanning() {\n  _s();\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [routeCoords, setRouteCoords] = useState(null);\n  const [routeInfo, setRouteInfo] = useState(null);\n  const [hazards, setHazards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [routeFound, setRouteFound] = useState(false);\n  const [recentRoutes, setRecentRoutes] = useState([]);\n  const [routeSteps, setRouteSteps] = useState([]);\n\n  // Static weather/traffic data\n  const [weather, setWeather] = useState({\n    temperature: \"32°C\",\n    condition: \"Clear\",\n    rain: \"10%\",\n    wind: \"6 km/h\"\n  });\n  const [traffic, setTraffic] = useState({\n    status: \"Smooth traffic\",\n    congestion: \"Medium\"\n  });\n  const [safePlaces, setSafePlaces] = useState([{\n    name: \"Apollo Hospital\",\n    distance: \"2.1 km\",\n    icon: \"🏥\"\n  }, {\n    name: \"Police Station\",\n    distance: \"1.4 km\",\n    icon: \"🚓\"\n  }, {\n    name: \"Petrol Pump\",\n    distance: \"0.9 km\",\n    icon: \"⛽\"\n  }]);\n\n  // Load recent routes from localStorage on mount\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(\"recentRoutes\"));\n    if (stored && Array.isArray(stored)) setRecentRoutes(stored);\n  }, []);\n  // Save recent routes\n  useEffect(() => {\n    localStorage.setItem(\"recentRoutes\", JSON.stringify(recentRoutes));\n  }, [recentRoutes]);\n\n  // Speech synthesis\n  function speak(msg) {\n    if (\"speechSynthesis\" in window) {\n      window.speechSynthesis.cancel();\n      const utter = new SpeechSynthesisUtterance(msg);\n      utter.lang = \"en-IN\";\n      window.speechSynthesis.speak(utter);\n    }\n  }\n\n  // Voice command handler\n  async function handleVoiceCommand(text) {\n    const cmd = text.toLowerCase();\n    if (cmd.includes(\"safe route from\")) {\n      const match = cmd.match(/safe route from (.+) to (.+)/);\n      if (match && match.length === 3) {\n        const fromCity = match[1].trim();\n        const toCity = match[2].trim();\n        setFrom(fromCity);\n        setTo(toCity);\n        await handleFindRoute(fromCity, toCity);\n        return;\n      }\n    } else if (cmd.includes(\"start navigation\")) {\n      handleStartNavigation();\n      return;\n    }\n    alert(\"Command not recognized. Please try again.\");\n  }\n\n  // Main route fetch\n  async function handleFindRoute() {\n    if (!from || !to) {\n      alert(\"Please enter both From and To locations.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      // Append ', India' for reliable geocoding\n      const fromCoords = await getCoordinates(from.trim() + \", India\");\n      const toCoords = await getCoordinates(to.trim() + \", India\");\n      const route = await getRoute(fromCoords, toCoords);\n      setRouteCoords(route.coordinates);\n      setRouteInfo(route);\n      setRouteSteps(route.steps || []);\n      const hazardsData = await loadHazards();\n      const hazardsOnRoute = checkHazardsNearRoute(route.coordinates, hazardsData);\n      setHazards(hazardsOnRoute);\n\n      // Save to recent routes\n      const exists = recentRoutes.some(r => r.from === from && r.to === to);\n      if (!exists) {\n        setRecentRoutes(prev => [...prev, {\n          from,\n          to\n        }]);\n      }\n      setRouteFound(true);\n\n      // Speak hazards info\n      if (hazardsOnRoute.length === 0) {\n        speak(\"No major hazards detected. Safe route.\");\n      } else {\n        const msgs = hazardsOnRoute.map(h => `${h.description} at ${h.name}`);\n        speak(\"Attention: \" + msgs.join(\". \"));\n      }\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n      // clear route\n      setRouteCoords(null);\n      setRouteInfo(null);\n      setRouteSteps([]);\n      setHazards([]);\n      setRouteFound(false);\n    }\n    setLoading(false);\n  }\n  function handleStartNavigation() {\n    if (routeCoords && routeCoords.length >= 2) {\n      const start = routeCoords[0]; // [lat, lng]\n      const end = routeCoords[routeCoords.length - 1];\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\n      window.open(url, \"_blank\");\n    }\n  }\n\n  // Feedback\n  const [feedback, setFeedback] = useState(\"\");\n  function handleSubmitFeedback() {\n    if (feedback.trim()) {\n      alert(\"Thank you for your feedback!\");\n      setFeedback(\"\");\n    } else {\n      alert(\"Please enter your feedback\");\n    }\n  }\n\n  // Recent route select\n  function fillRecentRoute(from, to) {\n    setFrom(from);\n    setTo(to);\n    setRouteFound(false);\n  }\n  const cardStyle = {\n    background: \"#f6f9ff\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 2px 8px #e4e9fa50\",\n    padding: \"18px 20px\",\n    minWidth: \"220px\",\n    flex: \"1 1 220px\",\n    color: \"#333\"\n  };\n\n  // JSX render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-planning-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SafePath AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VoiceChatbot, {\n        onCommand: handleVoiceCommand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDDFA\\uFE0F Route Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: from,\n            onChange: e => setFrom(e.target.value),\n            placeholder: \"Enter starting location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: to,\n            onChange: e => setTo(e.target.value),\n            placeholder: \"Enter destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindRoute,\n          disabled: loading,\n          children: loading ? \"Finding Safe Route...\" : \"Find Safe Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), routeFound && routeInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2705 Safe Route Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distance:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), \" \", routeInfo.distance, \" km\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Estimated Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), \" \", Math.floor(routeInfo.duration), \" min\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-warnings\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u26A0\\uFE0F Safety Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), hazards.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert success\",\n              children: \"\\u2705 No hazards detected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this) : hazards.map(h => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert ${h.type}`,\n              title: h.description,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: h.icon || \"⚠️\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this), \" \", h.description, \" (\", h.name, \")\"]\n            }, h.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-navigation-btn\",\n            onClick: handleStartNavigation,\n            children: \"\\uD83D\\uDE97 Start Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(RoutePlanning, \"UAC8FwjagabhsT7S0LLiOOI4Snc=\");\n_c = RoutePlanning;\nvar _c;\n$RefreshReg$(_c, \"RoutePlanning\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Polyline","L","useSpeechRecognition","SpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","loadHazards","response","fetch","ok","Error","json","getDistanceMeters","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","checkHazardsNearRoute","routeCoords","hazards","result","hazard","lat","lon","radius_meters","push","getCoordinates","place","encodeURIComponent","data","length","parseFloat","getRoute","startCoords","endCoords","routes","route","steps","legs","flatMap","leg","map","step","maneuver","instruction","coordinates","geometry","lng","distance","toFixed","duration","RoutePlanning","_s","from","setFrom","to","setTo","setRouteCoords","routeInfo","setRouteInfo","setHazards","loading","setLoading","routeFound","setRouteFound","recentRoutes","setRecentRoutes","routeSteps","setRouteSteps","weather","setWeather","temperature","condition","rain","wind","traffic","setTraffic","status","congestion","safePlaces","setSafePlaces","name","icon","stored","JSON","parse","localStorage","getItem","Array","isArray","setItem","stringify","speak","msg","window","speechSynthesis","cancel","utter","SpeechSynthesisUtterance","lang","handleVoiceCommand","text","cmd","toLowerCase","includes","match","fromCity","trim","toCity","handleFindRoute","handleStartNavigation","alert","fromCoords","toCoords","hazardsData","hazardsOnRoute","exists","some","r","prev","msgs","h","description","join","err","message","start","end","url","open","feedback","setFeedback","handleSubmitFeedback","fillRecentRoute","cardStyle","background","borderRadius","boxShadow","padding","minWidth","flex","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","VoiceChatbot","onCommand","value","onChange","e","target","placeholder","onClick","disabled","floor","type","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Venupriya/safepath/frontend-react/src/components/RoutePlanning.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { useSpeechRecognition, SpeechRecognition } from \"react-speech-recognition\";\r\nimport \"./RoutePlanning.css\";\r\n\r\n// Fix Leaflet default icon URLs\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\r\n});\r\n\r\n// Load hazards.json (ensure it exists in /public/)\r\nasync function loadHazards() {\r\n  const response = await fetch(\"/hazards.json\");\r\n  if (!response.ok) throw new Error(\"Failed to load hazards\");\r\n  return await response.json();\r\n}\r\n\r\n// Calculate distance between two GPS points\r\nfunction getDistanceMeters(lat1, lon1, lat2, lon2) {\r\n  const R = 6371000; // meters\r\n  const dLat = ((lat2 - lat1) * Math.PI) / 180;\r\n  const dLon = ((lon2 - lon1) * Math.PI) / 180;\r\n  const a =\r\n    Math.sin(dLat / 2) ** 2 +\r\n    Math.cos((lat1 * Math.PI) / 180) *\r\n      Math.cos((lat2 * Math.PI) / 180) *\r\n      Math.sin(dLon / 2) ** 2;\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  return R * c;\r\n}\r\n\r\n// Find hazards near route\r\nfunction checkHazardsNearRoute(routeCoords, hazards) {\r\n  const result = [];\r\n  for (const hazard of hazards) {\r\n    for (const [lat, lon] of routeCoords) {\r\n      if (getDistanceMeters(lat, lon, hazard.lat, hazard.lon) <= hazard.radius_meters) {\r\n        result.push(hazard);\r\n        break; // stop checking this hazard after first match\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n// Geocode place name to coords\r\nasync function getCoordinates(place) {\r\n  const response = await fetch(\r\n    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(place)}&limit=1`\r\n  );\r\n  const data = await response.json();\r\n  if (data && data.length > 0) {\r\n    return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\r\n  }\r\n  throw new Error(\"Location not found: \" + place);\r\n}\r\n\r\n// Use OSRM API to fetch route info\r\nasync function getRoute(startCoords, endCoords) {\r\n  const response = await fetch(\r\n    `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson&steps=true`\r\n  );\r\n  const data = await response.json();\r\n  if (data.routes && data.routes.length > 0) {\r\n    const route = data.routes[0];\r\n    const steps = route.legs.flatMap(leg => leg.steps.map(step => step.maneuver.instruction));\r\n    return {\r\n      coordinates: route.geometry.coordinates.map(([lng, lat]) => [lat, lng]),\r\n      distance: (route.distance / 1000).toFixed(2),\r\n      duration: (route.duration / 60).toFixed(0),\r\n      steps,\r\n    };\r\n  }\r\n  throw new Error(\"Route data unavailable\");\r\n}\r\n\r\n// Main component\r\nexport default function RoutePlanning() {\r\n  const [from, setFrom] = useState(\"\");\r\n  const [to, setTo] = useState(\"\");\r\n  const [routeCoords, setRouteCoords] = useState(null);\r\n  const [routeInfo, setRouteInfo] = useState(null);\r\n  const [hazards, setHazards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [routeFound, setRouteFound] = useState(false);\r\n  const [recentRoutes, setRecentRoutes] = useState([]);\r\n  const [routeSteps, setRouteSteps] = useState([]);\r\n\r\n  // Static weather/traffic data\r\n  const [weather, setWeather] = useState({ temperature: \"32°C\", condition: \"Clear\", rain: \"10%\", wind: \"6 km/h\" });\r\n  const [traffic, setTraffic] = useState({ status: \"Smooth traffic\", congestion: \"Medium\" });\r\n  const [safePlaces, setSafePlaces] = useState([\r\n    { name: \"Apollo Hospital\", distance: \"2.1 km\", icon: \"🏥\" },\r\n    { name: \"Police Station\", distance: \"1.4 km\", icon: \"🚓\" },\r\n    { name: \"Petrol Pump\", distance: \"0.9 km\", icon: \"⛽\" }\r\n  ]);\r\n\r\n  // Load recent routes from localStorage on mount\r\n  useEffect(() => {\r\n    const stored = JSON.parse(localStorage.getItem(\"recentRoutes\"));\r\n    if (stored && Array.isArray(stored)) setRecentRoutes(stored);\r\n  }, []);\r\n  // Save recent routes\r\n  useEffect(() => {\r\n    localStorage.setItem(\"recentRoutes\", JSON.stringify(recentRoutes));\r\n  }, [recentRoutes]);\r\n\r\n  // Speech synthesis\r\n  function speak(msg) {\r\n    if (\"speechSynthesis\" in window) {\r\n      window.speechSynthesis.cancel();\r\n      const utter = new SpeechSynthesisUtterance(msg);\r\n      utter.lang = \"en-IN\";\r\n      window.speechSynthesis.speak(utter);\r\n    }\r\n  }\r\n\r\n  // Voice command handler\r\n  async function handleVoiceCommand(text) {\r\n    const cmd = text.toLowerCase();\r\n    if (cmd.includes(\"safe route from\")) {\r\n      const match = cmd.match(/safe route from (.+) to (.+)/);\r\n      if (match && match.length === 3) {\r\n        const fromCity = match[1].trim();\r\n        const toCity = match[2].trim();\r\n        setFrom(fromCity);\r\n        setTo(toCity);\r\n        await handleFindRoute(fromCity, toCity);\r\n        return;\r\n      }\r\n    } else if (cmd.includes(\"start navigation\")) {\r\n      handleStartNavigation();\r\n      return;\r\n    }\r\n    alert(\"Command not recognized. Please try again.\");\r\n  }\r\n\r\n  // Main route fetch\r\n  async function handleFindRoute() {\r\n    if (!from || !to) {\r\n      alert(\"Please enter both From and To locations.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      // Append ', India' for reliable geocoding\r\n      const fromCoords = await getCoordinates(from.trim() + \", India\");\r\n      const toCoords = await getCoordinates(to.trim() + \", India\");\r\n      const route = await getRoute(fromCoords, toCoords);\r\n\r\n      setRouteCoords(route.coordinates);\r\n      setRouteInfo(route);\r\n      setRouteSteps(route.steps || []);\r\n\r\n      const hazardsData = await loadHazards();\r\n      const hazardsOnRoute = checkHazardsNearRoute(route.coordinates, hazardsData);\r\n      setHazards(hazardsOnRoute);\r\n      \r\n      // Save to recent routes\r\n      const exists = recentRoutes.some(r => r.from === from && r.to === to);\r\n      if (!exists) {\r\n        setRecentRoutes(prev => [...prev, { from, to }]);\r\n      }\r\n      setRouteFound(true);\r\n      \r\n      // Speak hazards info\r\n      if (hazardsOnRoute.length === 0) {\r\n        speak(\"No major hazards detected. Safe route.\");\r\n      } else {\r\n        const msgs = hazardsOnRoute.map(h => `${h.description} at ${h.name}`);\r\n        speak(\"Attention: \" + msgs.join(\". \"));\r\n      }\r\n    } catch (err) {\r\n      alert(\"Error: \" + err.message);\r\n      // clear route\r\n      setRouteCoords(null);\r\n      setRouteInfo(null);\r\n      setRouteSteps([]);\r\n      setHazards([]);\r\n      setRouteFound(false);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleStartNavigation() {\r\n    if (routeCoords && routeCoords.length >= 2) {\r\n      const start = routeCoords[0]; // [lat, lng]\r\n      const end = routeCoords[routeCoords.length - 1];\r\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\r\n      window.open(url, \"_blank\");\r\n    }\r\n  }\r\n\r\n  // Feedback\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  function handleSubmitFeedback() {\r\n    if (feedback.trim()) {\r\n       alert(\"Thank you for your feedback!\");\r\n       setFeedback(\"\");\r\n    } else {\r\n       alert(\"Please enter your feedback\");\r\n    }\r\n  }\r\n\r\n  // Recent route select\r\n  function fillRecentRoute(from, to) {\r\n    setFrom(from);\r\n    setTo(to);\r\n    setRouteFound(false);\r\n  }\r\n\r\n  const cardStyle = {\r\n    background: \"#f6f9ff\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"0 2px 8px #e4e9fa50\",\r\n    padding: \"18px 20px\",\r\n    minWidth: \"220px\",\r\n    flex: \"1 1 220px\",\r\n    color: \"#333\"\r\n  };\r\n\r\n  // JSX render\r\n  return (\r\n    <div className=\"route-planning-container\">\r\n      <div className=\"planning-panel\">\r\n        <h1>SafePath AI</h1>\r\n        <VoiceChatbot onCommand={handleVoiceCommand} />\r\n        {/* Form inputs */}\r\n        <div className=\"route-form\">\r\n          <h2>🗺️ Route Planning</h2>\r\n          <div className=\"input-group\">\r\n            <label>From</label>\r\n            <input\r\n              value={from}\r\n              onChange={e => setFrom(e.target.value)}\r\n              placeholder=\"Enter starting location\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>To</label>\r\n            <input\r\n              value={to}\r\n              onChange={e => setTo(e.target.value)}\r\n              placeholder=\"Enter destination\"\r\n            />\r\n          </div>\r\n          <button onClick={handleFindRoute} disabled={loading}>\r\n            {loading ? \"Finding Safe Route...\" : \"Find Safe Route\"}\r\n          </button>\r\n\r\n          {routeFound && routeInfo && (\r\n            <>\r\n              <div className=\"route-info\">\r\n                <h3>✅ Safe Route Found</h3>\r\n                <div>\r\n                  <strong>Distance:</strong> {routeInfo.distance} km\r\n                </div>\r\n                <div>\r\n                  <strong>Estimated Time:</strong> {Math.floor(routeInfo.duration)} min\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"route-warnings\">\r\n                <h4>⚠️ Safety Alerts</h4>\r\n                {hazards.length === 0 ? (\r\n                  <div className=\"alert success\">✅ No hazards detected</div>\r\n                ) : (\r\n                  hazards.map(h => (\r\n                    <div key={h.id} className={`alert ${h.type}`} title={h.description}>\r\n                      <span>{h.icon || \"⚠️\"}</span> {h.description} ({h.name})\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n\r\n              <button className=\"start-navigation-btn\" onClick={handleStartNavigation}>\r\n                🚗 Start Navigation\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {/* other sections remain unchanged */}\r\n        </div>\r\n        {/* Map and other UI */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}