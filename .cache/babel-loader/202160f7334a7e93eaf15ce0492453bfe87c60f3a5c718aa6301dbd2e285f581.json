{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venupriya\\\\safepath\\\\frontend-react\\\\src\\\\components\\\\RoutePlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport './RoutePlanning.css';\n\n// Fix for leaflet icons\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\n// Geocoding function - FIXED\nconst fetchCoordinates = async location => {\n  try {\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}&limit=1`;\n    const response = await fetch(url, {\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    const data = await response.json();\n    if (data && data.length > 0 && data[0].lat && data[0].lon) {\n      const lat = parseFloat(data[0].lat);\n      const lon = parseFloat(data[0].lon);\n      if (!isNaN(lat) && !isNaN(lon)) {\n        return [lat, lon];\n      }\n    }\n    throw new Error(`Location \"${location}\" not found or invalid coordinates`);\n  } catch (error) {\n    console.error('Geocoding error:', error);\n    throw error;\n  }\n};\n\n// Routing function - FIXED\nconst fetchRoute = async (startCoords, endCoords) => {\n  try {\n    // Validate coordinates\n    if (!startCoords || !endCoords || startCoords.length !== 2 || endCoords.length !== 2) {\n      throw new Error('Invalid coordinates');\n    }\n    if (isNaN(startCoords[0]) || isNaN(startCoords[1]) || isNaN(endCoords[0]) || isNaN(endCoords[1])) {\n      throw new Error('Invalid coordinate values');\n    }\n    const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Route could not be calculated');\n    }\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      const coordinates = route.geometry.coordinates;\n\n      // Convert [lng, lat] to [lat, lng] for Leaflet and validate\n      const leafletCoords = coordinates.map(coord => {\n        const lat = parseFloat(coord[1]);\n        const lng = parseFloat(coord[0]);\n        if (isNaN(lat) || isNaN(lng)) {\n          throw new Error('Invalid route coordinates');\n        }\n        return [lat, lng];\n      });\n      return {\n        coordinates: leafletCoords,\n        distance: Math.round(route.distance / 10) / 100,\n        // Convert to km\n        duration: Math.round(route.duration / 60) // Convert to minutes\n      };\n    } else {\n      throw new Error('No route found');\n    }\n  } catch (error) {\n    console.warn('OSRM routing failed:', error);\n    // Fallback to straight line with validation\n    const distance = Math.round(Math.sqrt(Math.pow((startCoords[0] - endCoords[0]) * 111, 2) + Math.pow((startCoords[1] - endCoords[1]) * 111, 2)) * 100) / 100;\n    return {\n      coordinates: [startCoords, endCoords],\n      distance: distance,\n      duration: Math.round(distance / 50 * 60) // 50 km/h average\n    };\n  }\n};\nconst RoutePlanning = () => {\n  _s();\n  const [fromLocation, setFromLocation] = useState('');\n  const [toLocation, setToLocation] = useState('');\n  const [route, setRoute] = useState(null);\n  const [routeData, setRouteData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [routeFound, setRouteFound] = useState(false);\n\n  // MAIN ROUTE FINDING FUNCTION - FIXED\n  const handleFindRoute = async () => {\n    if (!fromLocation.trim() || !toLocation.trim()) {\n      alert('Please enter both From and To locations');\n      return;\n    }\n    console.log(`🔍 Finding route from \"${fromLocation}\" to \"${toLocation}\"`);\n    setIsLoading(true);\n\n    // Clear everything first\n    setRoute(null);\n    setRouteData(null);\n    setRouteFound(false);\n    try {\n      // Step 1: Geocode both locations\n      console.log('🌍 Geocoding locations...');\n      const fromCoords = await fetchCoordinates(fromLocation.trim());\n      const toCoords = await fetchCoordinates(toLocation.trim());\n      console.log('📍 From:', fromCoords, 'To:', toCoords);\n\n      // Validate coordinates before proceeding\n      if (!fromCoords || !toCoords || fromCoords.length !== 2 || toCoords.length !== 2) {\n        throw new Error('Invalid coordinates received');\n      }\n\n      // Step 2: Get the route\n      console.log('🛣️ Fetching route...');\n      const routeInfo = await fetchRoute(fromCoords, toCoords);\n      console.log('✅ Route found:', {\n        distance: routeInfo.distance + 'km',\n        duration: routeInfo.duration + 'min',\n        points: routeInfo.coordinates.length\n      });\n\n      // Step 3: Update all states\n      setRoute(routeInfo.coordinates);\n      setRouteData(routeInfo);\n      setRouteFound(true);\n    } catch (error) {\n      console.error('❌ Route error:', error);\n      alert(`Error: ${error.message}`);\n      setRouteFound(false);\n      setRoute(null);\n      setRouteData(null);\n    }\n    setIsLoading(false);\n  };\n  const handleCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setFromLocation(`${position.coords.latitude.toFixed(6)}, ${position.coords.longitude.toFixed(6)}`);\n      }, error => {\n        alert('Could not get current location');\n      });\n    } else {\n      alert('Geolocation is not supported by this browser');\n    }\n  };\n  const handleStartNavigation = () => {\n    if (route && route.length >= 2) {\n      const start = route[0];\n      const end = route[route.length - 1];\n      const gmapsUrl = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\n      window.open(gmapsUrl, \"_blank\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-planning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"SafePath AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDDFA\\uFE0F Route Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: fromLocation,\n              onChange: e => setFromLocation(e.target.value),\n              placeholder: \"Enter starting location (e.g., Chennai)\",\n              className: \"location-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCurrentLocation,\n              className: \"current-location-btn\",\n              title: \"Use current location\",\n              type: \"button\",\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toLocation,\n            onChange: e => setToLocation(e.target.value),\n            placeholder: \"Enter destination (e.g., Salem)\",\n            className: \"location-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindRoute,\n          className: \"find-route-btn\",\n          disabled: isLoading,\n          type: \"button\",\n          children: isLoading ? '🔄 Finding Safe Route...' : '🛡️ Find Safe Route'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), routeFound && routeData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2705 Safe Route Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [routeData.distance, \" km\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Estimated Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: [Math.floor(routeData.duration / 60), \"h \", routeData.duration % 60, \"m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Safety Score:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value safe\",\n                  children: \"92%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"label\",\n                  children: \"Hazards Avoided:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"value\",\n                  children: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-warnings\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u26A0\\uFE0F Safety Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-item warning\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDEA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), \" Construction work possible on main highways\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-item info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83C\\uDF27\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), \" Check local weather for rain risks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert-item success\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2705\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), \" Route avoids major accident zones\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-navigation-btn\",\n            type: \"button\",\n            onClick: handleStartNavigation,\n            children: \"\\uD83D\\uDE97 Start Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-panel\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [12.9250, 80.2250],\n        zoom: 7,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), route && route.length > 0 && route[0] && /*#__PURE__*/_jsxDEV(Marker, {\n          position: route[0],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Starting Point: \", fromLocation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), route && route.length > 0 && route[route.length - 1] && /*#__PURE__*/_jsxDEV(Marker, {\n          position: route[route.length - 1],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [\"Destination: \", toLocation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), route && route.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: route,\n          color: \"#4CAF50\",\n          weight: 6,\n          opacity: 0.8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(RoutePlanning, \"6QotYioqHPzx0Vxii3DJsd5gVFI=\");\n_c = RoutePlanning;\nexport default RoutePlanning;\nvar _c;\n$RefreshReg$(_c, \"RoutePlanning\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","fetchCoordinates","location","url","encodeURIComponent","response","fetch","headers","data","json","length","lat","lon","parseFloat","isNaN","Error","error","console","fetchRoute","startCoords","endCoords","ok","routes","route","coordinates","geometry","leafletCoords","map","coord","lng","distance","Math","round","duration","warn","sqrt","pow","RoutePlanning","_s","fromLocation","setFromLocation","toLocation","setToLocation","setRoute","routeData","setRouteData","isLoading","setIsLoading","routeFound","setRouteFound","handleFindRoute","trim","alert","log","fromCoords","toCoords","routeInfo","points","message","handleCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","toFixed","longitude","handleStartNavigation","start","end","gmapsUrl","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","title","disabled","floor","center","zoom","style","height","width","attribution","positions","color","weight","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Venupriya/safepath/frontend-react/src/components/RoutePlanning.js"],"sourcesContent":[" import React, { useState } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport './RoutePlanning.css';\r\n\r\n// Fix for leaflet icons\r\nimport L from 'leaflet';\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\r\n});\r\n\r\n// Geocoding function - FIXED\r\nconst fetchCoordinates = async (location) => {\r\n  try {\r\n    const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(location)}&limit=1`;\r\n    const response = await fetch(url, { \r\n      headers: { 'Accept': 'application/json' } \r\n    });\r\n    const data = await response.json();\r\n    \r\n    if (data && data.length > 0 && data[0].lat && data[0].lon) {\r\n      const lat = parseFloat(data[0].lat);\r\n      const lon = parseFloat(data[0].lon);\r\n      \r\n      if (!isNaN(lat) && !isNaN(lon)) {\r\n        return [lat, lon];\r\n      }\r\n    }\r\n    throw new Error(`Location \"${location}\" not found or invalid coordinates`);\r\n  } catch (error) {\r\n    console.error('Geocoding error:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Routing function - FIXED\r\nconst fetchRoute = async (startCoords, endCoords) => {\r\n  try {\r\n    // Validate coordinates\r\n    if (!startCoords || !endCoords || startCoords.length !== 2 || endCoords.length !== 2) {\r\n      throw new Error('Invalid coordinates');\r\n    }\r\n    \r\n    if (isNaN(startCoords[0]) || isNaN(startCoords[1]) || isNaN(endCoords[0]) || isNaN(endCoords[1])) {\r\n      throw new Error('Invalid coordinate values');\r\n    }\r\n    \r\n    const url = `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`;\r\n    \r\n    const response = await fetch(url);\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Route could not be calculated');\r\n    }\r\n    \r\n    const data = await response.json();\r\n    \r\n    if (data.routes && data.routes.length > 0) {\r\n      const route = data.routes[0];\r\n      const coordinates = route.geometry.coordinates;\r\n      \r\n      // Convert [lng, lat] to [lat, lng] for Leaflet and validate\r\n      const leafletCoords = coordinates.map(coord => {\r\n        const lat = parseFloat(coord[1]);\r\n        const lng = parseFloat(coord[0]);\r\n        if (isNaN(lat) || isNaN(lng)) {\r\n          throw new Error('Invalid route coordinates');\r\n        }\r\n        return [lat, lng];\r\n      });\r\n      \r\n      return {\r\n        coordinates: leafletCoords,\r\n        distance: Math.round(route.distance / 10) / 100, // Convert to km\r\n        duration: Math.round(route.duration / 60), // Convert to minutes\r\n      };\r\n    } else {\r\n      throw new Error('No route found');\r\n    }\r\n  } catch (error) {\r\n    console.warn('OSRM routing failed:', error);\r\n    // Fallback to straight line with validation\r\n    const distance = Math.round(\r\n      Math.sqrt(\r\n        Math.pow((startCoords[0] - endCoords[0]) * 111, 2) +\r\n        Math.pow((startCoords[1] - endCoords[1]) * 111, 2)\r\n      ) * 100\r\n    ) / 100;\r\n    \r\n    return {\r\n      coordinates: [startCoords, endCoords],\r\n      distance: distance,\r\n      duration: Math.round(distance / 50 * 60), // 50 km/h average\r\n    };\r\n  }\r\n};\r\n\r\nconst RoutePlanning = () => {\r\n  const [fromLocation, setFromLocation] = useState('');\r\n  const [toLocation, setToLocation] = useState('');\r\n  const [route, setRoute] = useState(null);\r\n  const [routeData, setRouteData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [routeFound, setRouteFound] = useState(false);\r\n\r\n  // MAIN ROUTE FINDING FUNCTION - FIXED\r\n  const handleFindRoute = async () => {\r\n    if (!fromLocation.trim() || !toLocation.trim()) {\r\n      alert('Please enter both From and To locations');\r\n      return;\r\n    }\r\n    \r\n    console.log(`🔍 Finding route from \"${fromLocation}\" to \"${toLocation}\"`);\r\n    setIsLoading(true);\r\n    \r\n    // Clear everything first\r\n    setRoute(null);\r\n    setRouteData(null);\r\n    setRouteFound(false);\r\n    \r\n    try {\r\n      // Step 1: Geocode both locations\r\n      console.log('🌍 Geocoding locations...');\r\n      const fromCoords = await fetchCoordinates(fromLocation.trim());\r\n      const toCoords = await fetchCoordinates(toLocation.trim());\r\n      \r\n      console.log('📍 From:', fromCoords, 'To:', toCoords);\r\n      \r\n      // Validate coordinates before proceeding\r\n      if (!fromCoords || !toCoords || fromCoords.length !== 2 || toCoords.length !== 2) {\r\n        throw new Error('Invalid coordinates received');\r\n      }\r\n      \r\n      // Step 2: Get the route\r\n      console.log('🛣️ Fetching route...');\r\n      const routeInfo = await fetchRoute(fromCoords, toCoords);\r\n      \r\n      console.log('✅ Route found:', {\r\n        distance: routeInfo.distance + 'km',\r\n        duration: routeInfo.duration + 'min',\r\n        points: routeInfo.coordinates.length\r\n      });\r\n      \r\n      // Step 3: Update all states\r\n      setRoute(routeInfo.coordinates);\r\n      setRouteData(routeInfo);\r\n      setRouteFound(true);\r\n      \r\n    } catch (error) {\r\n      console.error('❌ Route error:', error);\r\n      alert(`Error: ${error.message}`);\r\n      setRouteFound(false);\r\n      setRoute(null);\r\n      setRouteData(null);\r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleCurrentLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setFromLocation(`${position.coords.latitude.toFixed(6)}, ${position.coords.longitude.toFixed(6)}`);\r\n      }, (error) => {\r\n        alert('Could not get current location');\r\n      });\r\n    } else {\r\n      alert('Geolocation is not supported by this browser');\r\n    }\r\n  };\r\n\r\n  const handleStartNavigation = () => {\r\n    if (route && route.length >= 2) {\r\n      const start = route[0];\r\n      const end = route[route.length - 1];\r\n      const gmapsUrl = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\r\n      window.open(gmapsUrl, \"_blank\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"route-planning-container\">\r\n      {/* Left Panel - Route Planning Form */}\r\n      <div className=\"planning-panel\">\r\n        <div className=\"header\">\r\n          <h1>SafePath AI</h1>\r\n        </div>\r\n\r\n        <div className=\"route-form\">\r\n          <h2>🗺️ Route Planning</h2>\r\n          \r\n          <div className=\"input-group\">\r\n            <label>From</label>\r\n            <div className=\"input-container\">\r\n              <input\r\n                type=\"text\"\r\n                value={fromLocation}\r\n                onChange={(e) => setFromLocation(e.target.value)}\r\n                placeholder=\"Enter starting location (e.g., Chennai)\"\r\n                className=\"location-input\"\r\n              />\r\n              <button \r\n                onClick={handleCurrentLocation}\r\n                className=\"current-location-btn\"\r\n                title=\"Use current location\"\r\n                type=\"button\"\r\n              >\r\n                📍\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label>To</label>\r\n            <input\r\n              type=\"text\"\r\n              value={toLocation}\r\n              onChange={(e) => setToLocation(e.target.value)}\r\n              placeholder=\"Enter destination (e.g., Salem)\"\r\n              className=\"location-input\"\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            onClick={handleFindRoute}\r\n            className=\"find-route-btn\"\r\n            disabled={isLoading}\r\n            type=\"button\"\r\n          >\r\n            {isLoading ? '🔄 Finding Safe Route...' : '🛡️ Find Safe Route'}\r\n          </button>\r\n\r\n          {routeFound && routeData && (\r\n            <div className=\"route-info\">\r\n              <div className=\"route-stats\">\r\n                <h3>✅ Safe Route Found</h3>\r\n                <div className=\"stats\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"label\">Distance:</span>\r\n                    <span className=\"value\">{routeData.distance} km</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"label\">Estimated Time:</span>\r\n                    <span className=\"value\">\r\n                      {Math.floor(routeData.duration / 60)}h {routeData.duration % 60}m\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"label\">Safety Score:</span>\r\n                    <span className=\"value safe\">92%</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"label\">Hazards Avoided:</span>\r\n                    <span className=\"value\">3</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"route-warnings\">\r\n                <h4>⚠️ Safety Alerts</h4>\r\n                <div className=\"alert-item warning\">\r\n                  <span>🚧</span> Construction work possible on main highways\r\n                </div>\r\n                <div className=\"alert-item info\">\r\n                  <span>🌧️</span> Check local weather for rain risks\r\n                </div>\r\n                <div className=\"alert-item success\">\r\n                  <span>✅</span> Route avoids major accident zones\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"start-navigation-btn\" type=\"button\" onClick={handleStartNavigation}>\r\n                🚗 Start Navigation\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Panel - Map */}\r\n      <div className=\"map-panel\">\r\n        <MapContainer \r\n          center={[12.9250, 80.2250]}\r\n          zoom={7}\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n\r\n          {/* Start Marker */}\r\n          {route && route.length > 0 && route[0] && (\r\n            <Marker position={route[0]}>\r\n              <Popup>Starting Point: {fromLocation}</Popup>\r\n            </Marker>\r\n          )}\r\n\r\n          {/* End Marker */}\r\n          {route && route.length > 0 && route[route.length - 1] && (\r\n            <Marker position={route[route.length - 1]}>\r\n              <Popup>Destination: {toLocation}</Popup>\r\n            </Marker>\r\n          )}\r\n\r\n          {/* Route Line */}\r\n          {route && route.length > 0 && (\r\n            <Polyline \r\n              positions={route} \r\n              color=\"#4CAF50\" \r\n              weight={6}\r\n              opacity={0.8}\r\n            />\r\n          )}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoutePlanning;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}