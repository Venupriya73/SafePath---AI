{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venupriya\\\\safepath\\\\frontend-react\\\\src\\\\components\\\\RoutePlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"./RoutePlanning.css\";\n\n// Fix for leaflet icon assets\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\n\n// Get latitude and longitude for a place name\nasync function getCoordinates(place) {\n  const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(place)}&limit=1`);\n  const data = await response.json();\n  if (data && data.length > 0) {\n    return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\n  }\n  throw new Error(\"Location not found: \" + place);\n}\n\n// Get route between two points using OSRM\nasync function getRoute(startCoords, endCoords) {\n  const response = await fetch(`https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`);\n  const data = await response.json();\n  if (data && data.routes && data.routes.length > 0) {\n    const route = data.routes[0];\n    return {\n      coordinates: route.geometry.coordinates.map(([lng, lat]) => [lat, lng]),\n      distance: route.distance / 1000,\n      // in km\n      duration: route.duration / 60 // in minutes\n    };\n  }\n  throw new Error(\"Route calculation failed\");\n}\n\n// Fetch weather alerts from OpenWeatherMap API\nasync function fetchWeatherAlerts(lat, lon, apiKey) {\n  const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,daily&appid=${apiKey}`);\n  const data = await response.json();\n  if (data && data.alerts && data.alerts.length > 0) {\n    return data.alerts.map(alert => ({\n      type: \"warning\",\n      icon: \"🌧️\",\n      text: `${alert.event}: ${alert.description}`\n    }));\n  }\n  return [];\n}\n\n// Mocked traffic alerts (replace with real API calls)\nasync function fetchTrafficAlerts() {\n  return [{\n    type: \"danger\",\n    icon: \"🚧\",\n    text: \"Construction work causing slowdowns on main highway.\"\n  }, {\n    type: \"danger\",\n    icon: \"⚠️\",\n    text: \"Recent accident reported near your route, proceed with caution.\"\n  }];\n}\nexport default function RoutePlanning() {\n  _s();\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [routeCoords, setRouteCoords] = useState(null);\n  const [routeInfo, setRouteInfo] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Add your actual OpenWeatherMap API key here\n  const OPENWEATHERMAP_API_KEY = \"YOUR_OPENWEATHERMAP_API_KEY\";\n  async function handleFindRoute() {\n    if (!from || !to) {\n      alert(\"Please enter both source and destination.\");\n      return;\n    }\n    setLoading(true);\n    setAlerts([]);\n    setRouteCoords(null);\n    setRouteInfo(null);\n    try {\n      const fromCoords = await getCoordinates(from.trim());\n      const toCoords = await getCoordinates(to.trim());\n      const route = await getRoute(fromCoords, toCoords);\n      setRouteCoords(route.coordinates);\n      setRouteInfo(route);\n\n      // Fetch alerts\n      const weatherAlerts = await fetchWeatherAlerts(fromCoords[0], fromCoords[1], OPENWEATHERMAP_API_KEY);\n      const trafficAlerts = await fetchTrafficAlerts(); // Replace with real call\n\n      setAlerts([...weatherAlerts, ...trafficAlerts]);\n    } catch (error) {\n      alert(\"Error: \" + error.message);\n    }\n    setLoading(false);\n  }\n  function handleStartNavigation() {\n    if (routeCoords && routeCoords.length >= 2) {\n      const start = routeCoords[0];\n      const end = routeCoords[routeCoords.length - 1];\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\n      window.open(url, \"_blank\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-planning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SafePath AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDDFA\\uFE0F Route Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: from,\n            onChange: e => setFrom(e.target.value),\n            placeholder: \"Enter starting location\",\n            className: \"location-input\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: to,\n            onChange: e => setTo(e.target.value),\n            placeholder: \"Enter destination\",\n            className: \"location-input\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindRoute,\n          disabled: loading,\n          className: \"find-route-btn\",\n          type: \"button\",\n          children: loading ? \"Loading...\" : \"Find Safe Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), routeInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u2705 Safe Route Found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Distance: \", routeInfo.distance.toFixed(1), \" km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Estimated Time:\", \" \", Math.floor(routeInfo.duration / 60), \"h \", Math.round(routeInfo.duration % 60), \"m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartNavigation,\n            className: \"start-button\",\n            children: \"Start Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alerts-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Alerts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), alerts.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No alerts detected.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 37\n          }, this), alerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `alert-item ${alert.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: alert.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), \" \", alert.text]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: routeCoords ? routeCoords[0] : [13.0827, 80.2707],\n        zoom: 7,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), routeCoords && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: routeCoords[0],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Start: \", from]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: routeCoords[routeCoords.length - 1],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"End: \", to]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: routeCoords,\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(RoutePlanning, \"jC0UCBSOEPszU2e8EeOKdOH7icQ=\");\n_c = RoutePlanning;\nvar _c;\n$RefreshReg$(_c, \"RoutePlanning\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","getCoordinates","place","response","fetch","encodeURIComponent","data","json","length","parseFloat","lat","lon","Error","getRoute","startCoords","endCoords","routes","route","coordinates","geometry","map","lng","distance","duration","fetchWeatherAlerts","apiKey","alerts","alert","type","icon","text","event","description","fetchTrafficAlerts","RoutePlanning","_s","from","setFrom","to","setTo","routeCoords","setRouteCoords","routeInfo","setRouteInfo","setAlerts","loading","setLoading","OPENWEATHERMAP_API_KEY","handleFindRoute","fromCoords","trim","toCoords","weatherAlerts","trafficAlerts","error","message","handleStartNavigation","start","end","url","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","toFixed","Math","floor","round","idx","center","zoom","style","height","width","attribution","position","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/Venupriya/safepath/frontend-react/src/components/RoutePlanning.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  Polyline,\r\n} from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./RoutePlanning.css\";\r\n\r\n// Fix for leaflet icon assets\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\n// Get latitude and longitude for a place name\r\nasync function getCoordinates(place) {\r\n  const response = await fetch(\r\n    `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n      place\r\n    )}&limit=1`\r\n  );\r\n  const data = await response.json();\r\n  if (data && data.length > 0) {\r\n    return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\r\n  }\r\n  throw new Error(\"Location not found: \" + place);\r\n}\r\n\r\n// Get route between two points using OSRM\r\nasync function getRoute(startCoords, endCoords) {\r\n  const response = await fetch(\r\n    `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`\r\n  );\r\n  const data = await response.json();\r\n  if (data && data.routes && data.routes.length > 0) {\r\n    const route = data.routes[0];\r\n    return {\r\n      coordinates: route.geometry.coordinates.map(([lng, lat]) => [\r\n        lat,\r\n        lng,\r\n      ]),\r\n      distance: route.distance / 1000, // in km\r\n      duration: route.duration / 60, // in minutes\r\n    };\r\n  }\r\n  throw new Error(\"Route calculation failed\");\r\n}\r\n\r\n// Fetch weather alerts from OpenWeatherMap API\r\nasync function fetchWeatherAlerts(lat, lon, apiKey) {\r\n  const response = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,daily&appid=${apiKey}`\r\n  );\r\n  const data = await response.json();\r\n  if (data && data.alerts && data.alerts.length > 0) {\r\n    return data.alerts.map((alert) => ({\r\n      type: \"warning\",\r\n      icon: \"🌧️\",\r\n      text: `${alert.event}: ${alert.description}`,\r\n    }));\r\n  }\r\n  return [];\r\n}\r\n\r\n// Mocked traffic alerts (replace with real API calls)\r\nasync function fetchTrafficAlerts() {\r\n  return [\r\n    {\r\n      type: \"danger\",\r\n      icon: \"🚧\",\r\n      text: \"Construction work causing slowdowns on main highway.\",\r\n    },\r\n    {\r\n      type: \"danger\",\r\n      icon: \"⚠️\",\r\n      text: \"Recent accident reported near your route, proceed with caution.\",\r\n    },\r\n  ];\r\n}\r\n\r\nexport default function RoutePlanning() {\r\n  const [from, setFrom] = useState(\"\");\r\n  const [to, setTo] = useState(\"\");\r\n  const [routeCoords, setRouteCoords] = useState(null);\r\n  const [routeInfo, setRouteInfo] = useState(null);\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Add your actual OpenWeatherMap API key here\r\n  const OPENWEATHERMAP_API_KEY = \"YOUR_OPENWEATHERMAP_API_KEY\";\r\n\r\n  async function handleFindRoute() {\r\n    if (!from || !to) {\r\n      alert(\"Please enter both source and destination.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setAlerts([]);\r\n    setRouteCoords(null);\r\n    setRouteInfo(null);\r\n\r\n    try {\r\n      const fromCoords = await getCoordinates(from.trim());\r\n      const toCoords = await getCoordinates(to.trim());\r\n\r\n      const route = await getRoute(fromCoords, toCoords);\r\n\r\n      setRouteCoords(route.coordinates);\r\n      setRouteInfo(route);\r\n\r\n      // Fetch alerts\r\n      const weatherAlerts = await fetchWeatherAlerts(\r\n        fromCoords[0],\r\n        fromCoords[1],\r\n        OPENWEATHERMAP_API_KEY\r\n      );\r\n      const trafficAlerts = await fetchTrafficAlerts(); // Replace with real call\r\n\r\n      setAlerts([...weatherAlerts, ...trafficAlerts]);\r\n    } catch (error) {\r\n      alert(\"Error: \" + error.message);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleStartNavigation() {\r\n    if (routeCoords && routeCoords.length >= 2) {\r\n      const start = routeCoords[0];\r\n      const end = routeCoords[routeCoords.length - 1];\r\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\r\n      window.open(url, \"_blank\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"route-planning-container\">\r\n      <div className=\"planning-panel\">\r\n        <h1>SafePath AI</h1>\r\n        <div className=\"route-form\">\r\n          <h2>🗺️ Route Planning</h2>\r\n\r\n          <div className=\"input-group\">\r\n            <label>From</label>\r\n            <input\r\n              value={from}\r\n              onChange={(e) => setFrom(e.target.value)}\r\n              placeholder=\"Enter starting location\"\r\n              className=\"location-input\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <label>To</label>\r\n            <input\r\n              value={to}\r\n              onChange={(e) => setTo(e.target.value)}\r\n              placeholder=\"Enter destination\"\r\n              className=\"location-input\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            onClick={handleFindRoute}\r\n            disabled={loading}\r\n            className=\"find-route-btn\"\r\n            type=\"button\"\r\n          >\r\n            {loading ? \"Loading...\" : \"Find Safe Route\"}\r\n          </button>\r\n\r\n          {routeInfo && (\r\n            <div className=\"route-info\">\r\n              <h3>✅ Safe Route Found</h3>\r\n              <div>Distance: {routeInfo.distance.toFixed(1)} km</div>\r\n              <div>\r\n                Estimated Time:{\" \"}\r\n                {Math.floor(routeInfo.duration / 60)}h {Math.round(routeInfo.duration % 60)}m\r\n              </div>\r\n              <button onClick={handleStartNavigation} className=\"start-button\">\r\n                Start Navigation\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"alerts-container\">\r\n            <h4>Alerts:</h4>\r\n            {alerts.length === 0 && <div>No alerts detected.</div>}\r\n            {alerts.map((alert, idx) => (\r\n              <div key={idx} className={`alert-item ${alert.type}`}>\r\n                <span>{alert.icon}</span> {alert.text}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"map-container\">\r\n        <MapContainer\r\n          center={routeCoords ? routeCoords[0] : [13.0827, 80.2707]}\r\n          zoom={7}\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"© OpenStreetMap contributors\"\r\n          />\r\n          {routeCoords && (\r\n            <>\r\n              <Marker position={routeCoords[0]}>\r\n                <Popup>Start: {from}</Popup>\r\n              </Marker>\r\n              <Marker position={routeCoords[routeCoords.length - 1]}>\r\n                <Popup>End: {to}</Popup>\r\n              </Marker>\r\n              <Polyline positions={routeCoords} color=\"green\" />\r\n            </>\r\n          )}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,YAAY,EACZC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAOJ,CAAC,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CR,CAAC,CAACK,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;;AAEF;AACA,eAAeG,cAAcA,CAACC,KAAK,EAAE;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAA4DC,kBAAkB,CAC5EH,KACF,CAAC,UACH,CAAC;EACD,MAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;IAC3B,OAAO,CAACC,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC,EAAED,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC,CAACK,GAAG,CAAC,CAAC;EAC3D;EACA,MAAM,IAAIC,KAAK,CAAC,sBAAsB,GAAGV,KAAK,CAAC;AACjD;;AAEA;AACA,eAAeW,QAAQA,CAACC,WAAW,EAAEC,SAAS,EAAE;EAC9C,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDAAoDU,WAAW,CAAC,CAAC,CAAC,IAAIA,WAAW,CAAC,CAAC,CAAC,IAAIC,SAAS,CAAC,CAAC,CAAC,IAAIA,SAAS,CAAC,CAAC,CAAC,mCACtH,CAAC;EACD,MAAMT,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,IAAIA,IAAI,CAACU,MAAM,IAAIV,IAAI,CAACU,MAAM,CAACR,MAAM,GAAG,CAAC,EAAE;IACjD,MAAMS,KAAK,GAAGX,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC;IAC5B,OAAO;MACLE,WAAW,EAAED,KAAK,CAACE,QAAQ,CAACD,WAAW,CAACE,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEX,GAAG,CAAC,KAAK,CAC1DA,GAAG,EACHW,GAAG,CACJ,CAAC;MACFC,QAAQ,EAAEL,KAAK,CAACK,QAAQ,GAAG,IAAI;MAAE;MACjCC,QAAQ,EAAEN,KAAK,CAACM,QAAQ,GAAG,EAAE,CAAE;IACjC,CAAC;EACH;EACA,MAAM,IAAIX,KAAK,CAAC,0BAA0B,CAAC;AAC7C;;AAEA;AACA,eAAeY,kBAAkBA,CAACd,GAAG,EAAEC,GAAG,EAAEc,MAAM,EAAE;EAClD,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDAAuDM,GAAG,QAAQC,GAAG,gDAAgDc,MAAM,EAC7H,CAAC;EACD,MAAMnB,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAClC,IAAID,IAAI,IAAIA,IAAI,CAACoB,MAAM,IAAIpB,IAAI,CAACoB,MAAM,CAAClB,MAAM,GAAG,CAAC,EAAE;IACjD,OAAOF,IAAI,CAACoB,MAAM,CAACN,GAAG,CAAEO,KAAK,KAAM;MACjCC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE,GAAGH,KAAK,CAACI,KAAK,KAAKJ,KAAK,CAACK,WAAW;IAC5C,CAAC,CAAC,CAAC;EACL;EACA,OAAO,EAAE;AACX;;AAEA;AACA,eAAeC,kBAAkBA,CAAA,EAAG;EAClC,OAAO,CACL;IACEL,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;EACR,CAAC,CACF;AACH;AAEA,eAAe,SAASI,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACyD,EAAE,EAAEC,KAAK,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC6D,SAAS,EAAEC,YAAY,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6C,MAAM,EAAEkB,SAAS,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgE,OAAO,EAAEC,UAAU,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMkE,sBAAsB,GAAG,6BAA6B;EAE5D,eAAeC,eAAeA,CAAA,EAAG;IAC/B,IAAI,CAACZ,IAAI,IAAI,CAACE,EAAE,EAAE;MAChBX,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;IACAmB,UAAU,CAAC,IAAI,CAAC;IAChBF,SAAS,CAAC,EAAE,CAAC;IACbH,cAAc,CAAC,IAAI,CAAC;IACpBE,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACF,MAAMM,UAAU,GAAG,MAAMhD,cAAc,CAACmC,IAAI,CAACc,IAAI,CAAC,CAAC,CAAC;MACpD,MAAMC,QAAQ,GAAG,MAAMlD,cAAc,CAACqC,EAAE,CAACY,IAAI,CAAC,CAAC,CAAC;MAEhD,MAAMjC,KAAK,GAAG,MAAMJ,QAAQ,CAACoC,UAAU,EAAEE,QAAQ,CAAC;MAElDV,cAAc,CAACxB,KAAK,CAACC,WAAW,CAAC;MACjCyB,YAAY,CAAC1B,KAAK,CAAC;;MAEnB;MACA,MAAMmC,aAAa,GAAG,MAAM5B,kBAAkB,CAC5CyB,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACbF,sBACF,CAAC;MACD,MAAMM,aAAa,GAAG,MAAMpB,kBAAkB,CAAC,CAAC,CAAC,CAAC;;MAElDW,SAAS,CAAC,CAAC,GAAGQ,aAAa,EAAE,GAAGC,aAAa,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd3B,KAAK,CAAC,SAAS,GAAG2B,KAAK,CAACC,OAAO,CAAC;IAClC;IAEAT,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,SAASU,qBAAqBA,CAAA,EAAG;IAC/B,IAAIhB,WAAW,IAAIA,WAAW,CAAChC,MAAM,IAAI,CAAC,EAAE;MAC1C,MAAMiD,KAAK,GAAGjB,WAAW,CAAC,CAAC,CAAC;MAC5B,MAAMkB,GAAG,GAAGlB,WAAW,CAACA,WAAW,CAAChC,MAAM,GAAG,CAAC,CAAC;MAC/C,MAAMmD,GAAG,GAAG,iDAAiDF,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,gBAAgBC,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE;MACnHE,MAAM,CAACC,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;IAC5B;EACF;EAEA,oBACEtE,OAAA;IAAKyE,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvC1E,OAAA;MAAKyE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B1E,OAAA;QAAA0E,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB9E,OAAA;QAAKyE,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB1E,OAAA;UAAA0E,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE3B9E,OAAA;UAAKyE,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1E,OAAA;YAAA0E,QAAA,EAAO;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnB9E,OAAA;YACE+E,KAAK,EAAEhC,IAAK;YACZiC,QAAQ,EAAGC,CAAC,IAAKjC,OAAO,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCI,WAAW,EAAC,yBAAyB;YACrCV,SAAS,EAAC,gBAAgB;YAC1BlC,IAAI,EAAC;UAAM;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN9E,OAAA;UAAKyE,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B1E,OAAA;YAAA0E,QAAA,EAAO;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjB9E,OAAA;YACE+E,KAAK,EAAE9B,EAAG;YACV+B,QAAQ,EAAGC,CAAC,IAAK/B,KAAK,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACvCI,WAAW,EAAC,mBAAmB;YAC/BV,SAAS,EAAC,gBAAgB;YAC1BlC,IAAI,EAAC;UAAM;YAAAoC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN9E,OAAA;UACEoF,OAAO,EAAEzB,eAAgB;UACzB0B,QAAQ,EAAE7B,OAAQ;UAClBiB,SAAS,EAAC,gBAAgB;UAC1BlC,IAAI,EAAC,QAAQ;UAAAmC,QAAA,EAEZlB,OAAO,GAAG,YAAY,GAAG;QAAiB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC,EAERzB,SAAS,iBACRrD,OAAA;UAAKyE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzB1E,OAAA;YAAA0E,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B9E,OAAA;YAAA0E,QAAA,GAAK,YAAU,EAACrB,SAAS,CAACpB,QAAQ,CAACqD,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvD9E,OAAA;YAAA0E,QAAA,GAAK,iBACY,EAAC,GAAG,EAClBa,IAAI,CAACC,KAAK,CAACnC,SAAS,CAACnB,QAAQ,GAAG,EAAE,CAAC,EAAC,IAAE,EAACqD,IAAI,CAACE,KAAK,CAACpC,SAAS,CAACnB,QAAQ,GAAG,EAAE,CAAC,EAAC,GAC9E;UAAA;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACN9E,OAAA;YAAQoF,OAAO,EAAEjB,qBAAsB;YAACM,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAEjE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN,eAED9E,OAAA;UAAKyE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B1E,OAAA;YAAA0E,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACfzC,MAAM,CAAClB,MAAM,KAAK,CAAC,iBAAInB,OAAA;YAAA0E,QAAA,EAAK;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACrDzC,MAAM,CAACN,GAAG,CAAC,CAACO,KAAK,EAAEoD,GAAG,kBACrB1F,OAAA;YAAeyE,SAAS,EAAE,cAAcnC,KAAK,CAACC,IAAI,EAAG;YAAAmC,QAAA,gBACnD1E,OAAA;cAAA0E,QAAA,EAAOpC,KAAK,CAACE;YAAI;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,KAAC,EAACxC,KAAK,CAACG,IAAI;UAAA,GAD7BiD,GAAG;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9E,OAAA;MAAKyE,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5B1E,OAAA,CAACP,YAAY;QACXkG,MAAM,EAAExC,WAAW,GAAGA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAE;QAC1DyC,IAAI,EAAE,CAAE;QACRC,KAAK,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAArB,QAAA,gBAEzC1E,OAAA,CAACN,SAAS;UACR4E,GAAG,EAAC,oDAAoD;UACxD0B,WAAW,EAAC;QAA8B;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACD3B,WAAW,iBACVnD,OAAA,CAAAE,SAAA;UAAAwE,QAAA,gBACE1E,OAAA,CAACL,MAAM;YAACsG,QAAQ,EAAE9C,WAAW,CAAC,CAAC,CAAE;YAAAuB,QAAA,eAC/B1E,OAAA,CAACJ,KAAK;cAAA8E,QAAA,GAAC,SAAO,EAAC3B,IAAI;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACT9E,OAAA,CAACL,MAAM;YAACsG,QAAQ,EAAE9C,WAAW,CAACA,WAAW,CAAChC,MAAM,GAAG,CAAC,CAAE;YAAAuD,QAAA,eACpD1E,OAAA,CAACJ,KAAK;cAAA8E,QAAA,GAAC,OAAK,EAACzB,EAAE;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACT9E,OAAA,CAACH,QAAQ;YAACqG,SAAS,EAAE/C,WAAY;YAACgD,KAAK,EAAC;UAAO;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAClD,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAhJuBD,aAAa;AAAAuD,EAAA,GAAbvD,aAAa;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}