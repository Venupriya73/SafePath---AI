{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venupriya\\\\safepath\\\\frontend-react\\\\src\\\\components\\\\RoutePlanning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"./RoutePlanning.css\";\n\n// Leaflet icon fix\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n});\nasync function loadHazards() {\n  const response = await fetch(\"/hazards.json\");\n  if (!response.ok) throw new Error(\"Failed to load hazards data\");\n  return await response.json();\n}\nfunction getDistanceMeters(lat1, lon1, lat2, lon2) {\n  const toRad = x => x * Math.PI / 180;\n  const R = 6371000;\n  const dLat = toRad(lat2 - lat1);\n  const dLon = toRad(lon2 - lon1);\n  const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return R * c;\n}\nfunction checkHazardsNearRoute(routeCoords, hazards) {\n  const result = [];\n  hazards.forEach(hazard => {\n    for (const [lat, lon] of routeCoords) {\n      if (getDistanceMeters(lat, lon, hazard.lat, hazard.lon) <= hazard.radius_meters) {\n        result.push(hazard);\n        break;\n      }\n    }\n  });\n  return result;\n}\nexport default function RoutePlanning() {\n  _s();\n  const [fromLocation, setFromLocation] = useState(\"\");\n  const [toLocation, setToLocation] = useState(\"\");\n  const [routeCoords, setRouteCoords] = useState(null);\n  const [routeInfo, setRouteInfo] = useState(null);\n  const [hazards, setHazards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [routeFound, setRouteFound] = useState(false);\n  async function getCoordinates(place) {\n    const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(place)}&limit=1`);\n    const data = await response.json();\n    if (data && data.length > 0) {\n      return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\n    }\n    throw new Error(\"Location not found: \" + place);\n  }\n  async function getRoute(startCoords, endCoords) {\n    const response = await fetch(`https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`);\n    const data = await response.json();\n    if (data.routes && data.routes.length > 0) {\n      const route = data.routes[0];\n      return {\n        coordinates: route.geometry.coordinates.map(([lng, lat]) => [lat, lng]),\n        distance: route.distance / 1000,\n        // in km\n        duration: route.duration / 60 // in min\n      };\n    }\n    throw new Error(\"Route calculation failed\");\n  }\n  async function handleFindRoute() {\n    if (!fromLocation || !toLocation) {\n      alert(\"Please enter both source and destination.\");\n      return;\n    }\n    setLoading(true);\n    setRouteCoords(null);\n    setRouteInfo(null);\n    setHazards([]);\n    setRouteFound(false);\n    try {\n      const fromCoords = await getCoordinates(fromLocation.trim());\n      const toCoords = await getCoordinates(toLocation.trim());\n      const route = await getRoute(fromCoords, toCoords);\n      setRouteCoords(route.coordinates);\n      setRouteInfo(route);\n      const hazardsData = await loadHazards();\n      const hazardsOnRoute = checkHazardsNearRoute(route.coordinates, hazardsData);\n      setHazards(hazardsOnRoute);\n      setRouteFound(true);\n    } catch (err) {\n      alert(\"Error: \" + err.message);\n    }\n    setLoading(false);\n  }\n  function handleStartNavigation() {\n    if (routeCoords && routeCoords.length >= 2) {\n      const start = routeCoords[0];\n      const end = routeCoords[routeCoords.length - 1];\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\n      window.open(url, \"_blank\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-planning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"SafePath AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDDFA\\uFE0F Route Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: fromLocation,\n            onChange: e => setFromLocation(e.target.value),\n            placeholder: \"Enter starting location\",\n            className: \"location-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: toLocation,\n            onChange: e => setToLocation(e.target.value),\n            placeholder: \"Enter destination\",\n            className: \"location-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindRoute,\n          disabled: loading,\n          className: \"find-route-btn\",\n          children: loading ? \"Finding Safe Route...\" : \"Find Safe Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), routeFound && routeInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u2705 Safe Route Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Distance:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), \" \", routeInfo.distance.toFixed(2), \" km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Estimated Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), \" \", Math.floor(routeInfo.duration / 60), \"h\", \" \", Math.round(routeInfo.duration % 60), \"m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-warnings\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"\\u26A0\\uFE0F Safety Alerts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), hazards.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert success\",\n              children: \"\\u2705 No major hazards detected. Safe route.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), hazards.map(hazard => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `alert ${hazard.type}`,\n              title: hazard.description,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: hazard.icon || \"⚠️\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this), \" \", hazard.description, \" (\", hazard.name, \")\"]\n            }, hazard.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-navigation-btn\",\n            onClick: handleStartNavigation,\n            children: \"\\uD83D\\uDE97 Start Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: routeCoords ? routeCoords[0] : [12.835, 79.703],\n        zoom: 9,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), routeCoords && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: routeCoords[0],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"Start: \", fromLocation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: routeCoords[routeCoords.length - 1],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [\"End: \", toLocation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: routeCoords,\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(RoutePlanning, \"0n7zI6q/ohA+eT3GCp7ZgdqT6v0=\");\n_c = RoutePlanning;\nvar _c;\n$RefreshReg$(_c, \"RoutePlanning\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","Polyline","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","loadHazards","response","fetch","ok","Error","json","getDistanceMeters","lat1","lon1","lat2","lon2","toRad","x","Math","PI","R","dLat","dLon","a","sin","cos","c","atan2","sqrt","checkHazardsNearRoute","routeCoords","hazards","result","forEach","hazard","lat","lon","radius_meters","push","RoutePlanning","_s","fromLocation","setFromLocation","toLocation","setToLocation","setRouteCoords","routeInfo","setRouteInfo","setHazards","loading","setLoading","routeFound","setRouteFound","getCoordinates","place","encodeURIComponent","data","length","parseFloat","getRoute","startCoords","endCoords","routes","route","coordinates","geometry","map","lng","distance","duration","handleFindRoute","alert","fromCoords","trim","toCoords","hazardsData","hazardsOnRoute","err","message","handleStartNavigation","start","end","url","window","open","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","toFixed","floor","round","title","description","icon","name","id","center","zoom","style","height","width","attribution","position","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/Venupriya/safepath/frontend-react/src/components/RoutePlanning.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport \"./RoutePlanning.css\";\r\n\r\n// Leaflet icon fix\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n  iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n  shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\"),\r\n});\r\n\r\nasync function loadHazards() {\r\n  const response = await fetch(\"/hazards.json\");\r\n  if (!response.ok) throw new Error(\"Failed to load hazards data\");\r\n  return await response.json();\r\n}\r\n\r\nfunction getDistanceMeters(lat1, lon1, lat2, lon2) {\r\n  const toRad = (x) => (x * Math.PI) / 180;\r\n  const R = 6371000;\r\n  const dLat = toRad(lat2 - lat1);\r\n  const dLon = toRad(lon2 - lon1);\r\n  const a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n    Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  return R * c;\r\n}\r\n\r\nfunction checkHazardsNearRoute(routeCoords, hazards) {\r\n  const result = [];\r\n  hazards.forEach((hazard) => {\r\n    for (const [lat, lon] of routeCoords) {\r\n      if (getDistanceMeters(lat, lon, hazard.lat, hazard.lon) <= hazard.radius_meters) {\r\n        result.push(hazard);\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return result;\r\n}\r\n\r\nexport default function RoutePlanning() {\r\n  const [fromLocation, setFromLocation] = useState(\"\");\r\n  const [toLocation, setToLocation] = useState(\"\");\r\n  const [routeCoords, setRouteCoords] = useState(null);\r\n  const [routeInfo, setRouteInfo] = useState(null);\r\n  const [hazards, setHazards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [routeFound, setRouteFound] = useState(false);\r\n\r\n  async function getCoordinates(place) {\r\n    const response = await fetch(\r\n      `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(\r\n        place\r\n      )}&limit=1`\r\n    );\r\n    const data = await response.json();\r\n    if (data && data.length > 0) {\r\n      return [parseFloat(data[0].lat), parseFloat(data[0].lon)];\r\n    }\r\n    throw new Error(\"Location not found: \" + place);\r\n  }\r\n\r\n  async function getRoute(startCoords, endCoords) {\r\n    const response = await fetch(\r\n      `https://router.project-osrm.org/route/v1/driving/${startCoords[1]},${startCoords[0]};${endCoords[1]},${endCoords[0]}?overview=full&geometries=geojson`\r\n    );\r\n    const data = await response.json();\r\n    if (data.routes && data.routes.length > 0) {\r\n      const route = data.routes[0];\r\n      return {\r\n        coordinates: route.geometry.coordinates.map(([lng, lat]) => [\r\n          lat,\r\n          lng,\r\n        ]),\r\n        distance: route.distance / 1000, // in km\r\n        duration: route.duration / 60,   // in min\r\n      };\r\n    }\r\n    throw new Error(\"Route calculation failed\");\r\n  }\r\n\r\n  async function handleFindRoute() {\r\n    if (!fromLocation || !toLocation) {\r\n      alert(\"Please enter both source and destination.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    setRouteCoords(null);\r\n    setRouteInfo(null);\r\n    setHazards([]);\r\n    setRouteFound(false);\r\n\r\n    try {\r\n      const fromCoords = await getCoordinates(fromLocation.trim());\r\n      const toCoords = await getCoordinates(toLocation.trim());\r\n      const route = await getRoute(fromCoords, toCoords);\r\n\r\n      setRouteCoords(route.coordinates);\r\n      setRouteInfo(route);\r\n\r\n      const hazardsData = await loadHazards();\r\n      const hazardsOnRoute = checkHazardsNearRoute(route.coordinates, hazardsData);\r\n      setHazards(hazardsOnRoute);\r\n\r\n      setRouteFound(true);\r\n    } catch (err) {\r\n      alert(\"Error: \" + err.message);\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleStartNavigation() {\r\n    if (routeCoords && routeCoords.length >= 2) {\r\n      const start = routeCoords[0];\r\n      const end = routeCoords[routeCoords.length - 1];\r\n      const url = `https://www.google.com/maps/dir/?api=1&origin=${start[0]},${start[1]}&destination=${end[0]},${end[1]}`;\r\n      window.open(url, \"_blank\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"route-planning-container\">\r\n      <div className=\"planning-panel\">\r\n        <h1>SafePath AI</h1>\r\n        <div className=\"route-form\">\r\n          <h2>🗺️ Route Planning</h2>\r\n          <div className=\"input-group\">\r\n            <label>From</label>\r\n            <input\r\n              type=\"text\"\r\n              value={fromLocation}\r\n              onChange={(e) => setFromLocation(e.target.value)}\r\n              placeholder=\"Enter starting location\"\r\n              className=\"location-input\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>To</label>\r\n            <input\r\n              type=\"text\"\r\n              value={toLocation}\r\n              onChange={(e) => setToLocation(e.target.value)}\r\n              placeholder=\"Enter destination\"\r\n              className=\"location-input\"\r\n            />\r\n          </div>\r\n          <button\r\n            onClick={handleFindRoute}\r\n            disabled={loading}\r\n            className=\"find-route-btn\"\r\n          >\r\n            {loading ? \"Finding Safe Route...\" : \"Find Safe Route\"}\r\n          </button>\r\n\r\n          {routeFound && routeInfo && (\r\n            <>\r\n              <div className=\"route-info\">\r\n                <h3>✅ Safe Route Found</h3>\r\n                <div className=\"stats\">\r\n                  <div>\r\n                    <strong>Distance:</strong> {routeInfo.distance.toFixed(2)} km\r\n                  </div>\r\n                  <div>\r\n                    <strong>Estimated Time:</strong> {Math.floor(routeInfo.duration / 60)}h{\" \"}\r\n                    {Math.round(routeInfo.duration % 60)}m\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"route-warnings\">\r\n                <h4>⚠️ Safety Alerts</h4>\r\n                {hazards.length === 0 && (\r\n                  <div className=\"alert success\">\r\n                    ✅ No major hazards detected. Safe route.\r\n                  </div>\r\n                )}\r\n                {hazards.map((hazard) => (\r\n                  <div\r\n                    key={hazard.id}\r\n                    className={`alert ${hazard.type}`}\r\n                    title={hazard.description}\r\n                  >\r\n                    <span>{hazard.icon || \"⚠️\"}</span>{\" \"}\r\n                    {hazard.description} ({hazard.name})\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button className=\"start-navigation-btn\" onClick={handleStartNavigation}>\r\n                🚗 Start Navigation\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"map-container\">\r\n        <MapContainer\r\n          center={routeCoords ? routeCoords[0] : [12.835, 79.703]}\r\n          zoom={9}\r\n          style={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution=\"&copy; OpenStreetMap contributors\"\r\n          />\r\n          {routeCoords && (\r\n            <>\r\n              <Marker position={routeCoords[0]}>\r\n                <Popup>Start: {fromLocation}</Popup>\r\n              </Marker>\r\n              <Marker position={routeCoords[routeCoords.length - 1]}>\r\n                <Popup>End: {toLocation}</Popup>\r\n              </Marker>\r\n              <Polyline positions={routeCoords} color=\"green\" />\r\n            </>\r\n          )}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}